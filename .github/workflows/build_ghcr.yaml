name: Build container image for GHCR
on:
  push:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: '0 18 * * 5'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        base:
          - {directory: 'anvil-jupyter-rapids-bioconductor'}
    name: Build branch images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v4
        with:
          python-version: '2.7'

      - name: Set version
        id: version-meta
        run: echo "CONTAINER_VERSION=$(cat ${{ matrix.base.directory }}/VERSION)" >> $GITHUB_OUTPUT

      - name: Extract metadata for container image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.base.directory }}
          tags: |
            type=raw,value=${{ steps.version-meta.outputs.CONTAINER_VERSION }}

      - name: Build and push container image to GHCR
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.base.directory }}
          file: ${{ matrix.base.directory }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - run: |
          set -x
          if [[ "${{ matrix.base.directory }}" = *"-rstudio-"* ]]; then
            mkdir -p ${{ matrix.base.directory }}/info
            docker run --name ${{ matrix.base.directory }} -d ${{ steps.meta.outputs.tags }} 
            bash scripts/generate_packages.sh ${{ matrix.base.directory }}
            mkdir -p /tmp/${{ matrix.base.directory }}
            cp -r ${{ matrix.base.directory }}/info /tmp/${{ matrix.base.directory }}/
          fi

      - name: Rclone mark as pushed
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 5
          shell: bash
          command: |
            set -x
            BRANCH=${GITHUB_REF#refs/heads/}
            git pull origin $BRANCH || git reset --hard origin/$BRANCH
            git config user.name github-actions
            git config user.email github-actions@github.com
            cp -r /tmp/${{ matrix.base.directory }}/info ${{ matrix.base.directory }}/
            git add ${{ matrix.base.directory }}
            git commit -m "Generated info for ${{ matrix.base.directory }}"
            git push
